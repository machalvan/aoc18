// Solutions to Advent of Code 2018, day 1, part 1 and 2
// https://adventofcode.com/2018/day/1

var frequency 0                           // Initialize variables
var frequency_list 0
var input_values 0
var counter 0
var frequency_list_counter 1
var duplicate_frequency_not_found 1
var first_iteration_over_input_values 1

inp input                         // Get input line

// Iterate over the input and
// put the values in a list as
// positive and negative integers.
whl input                         // As long as input is not empty, enter block
  var index 0
  var char input[index]           // Set char to be the first character in input
  var plus "+"

  var plus_char_diff plus         // Subtract char from plus,
  dec plus_char_diff char         // if difference is 0, then char is a plus sign

  var char_equals_plus 1          // Assume that char is a plus sign and change in next step if incorrect
  var char_not_equals_plus 0

  con plus_char_diff              // If plus_char_diff is not 0, enter block
    var char_equals_plus 0        // Char was not a plus sign, set char_equals_plus to false
    var char_not_equals_plus 1
  end

  inc index                       // Move to next char
  var char input[index]

  whl char                                // For each remaining char on this line
    var index_minus_one index
    dec index_minus_one                   // Index - 1 is needed as a new index in the next step

    var number[index_minus_one] char      // Concatenate each char (integer) to a number variable
                                          // Number will (eventually) contain input line without the plus/minus sign
    inc index                             // Move to next char
    var char input[index]
  end

  int number                      // Treat number as an integer
  var input_value 0

  con char_equals_plus            // If
    inc input_value number
  end
  con char_not_equals_plus        // Else
    dec input_value number
  end

  var input_values[counter] input_value   // Add input value to list

  inc counter
  inp input                       // Get the next line
end

// Starting with 0, each added value
// from the input list gives a new frequency.
// Iterate over the input list repeatedly
// until a frequency is found twice.
whl duplicate_frequency_not_found
  var counter 0                   // Reset counter

  whl input_values[counter]                         // Enter block if input is not empty
    var input_value input_values[counter]
    inc frequency input_value                       // Add the number to frequency to get the new frequency

    var frequency_list_counter 0
    var element 1

    whl element                                     // For element in frequency list, enter loop at least once
      inc frequency_list_counter
      var element frequency_list[frequency_list_counter]

      var frequency_diff frequency                  // Subtract element from frequency,
      dec frequency_diff element                    // if difference is 0, then element is this frequency (again)

      var element_equals_frequency 1                // Assume that the element equals this frequency

      con frequency_diff                            // If frequency_diff is not 0, enter block
        var element_equals_frequency 0              // Element was not equal to this frequency, set
      end                                           // element_equals_frequency to false

      con element_equals_frequency                  // Print result for part 2
        out "Result for part 2: " 0
        str element
        out element
        int element

        var element 0             // Escape inner loop
        var input_values 0        // Escape outer loop

        var duplicate_frequency_not_found 0
      end
    end

    var frequency_list[frequency_list_counter] frequency

    inc counter
    inc frequency_list_counter
  end

  con first_iteration_over_input_values       // Print result for part 1 only after first iteration
    str frequency
    out "Result for part 1: " 0
    out frequency
    int frequency

    var first_iteration_over_input_values 0
  end
end